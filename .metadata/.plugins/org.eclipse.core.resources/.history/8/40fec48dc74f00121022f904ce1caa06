package com.vestrel00.nekko;

import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.Rectangle;
import com.vestrel00.nekko.interf.Drawable;
import com.vestrel00.nekko.interf.Touchable;
import com.vestrel00.nekko.interf.Updatable;

public class PauseManager implements Touchable, Drawable, Updatable {

	private final CharSequence PAUSED = "PAUSED", RESUME = "RESUME";
	private Rectangle resumeRect;
	private float halfWidth;
	private Color resumeColor;

	public PauseManager() {
		TextBounds bound = KFNekko.resource.chunkFive.getBounds(RESUME);
		resumeRect = new Rectangle(0, 0, bound.width, bound.height);
		bound = KFNekko.resource.chunkFive.getBounds(PAUSED);
		halfWidth = bound.width * 0.5f;
		resumeColor = new Color(Color.WHITE);
	}

	@Override
	public void update() {
		resumeRect.x = KFNekko.camera.rect.x + 387.0f;
		resumeRect.y = KFNekko.camera.rect.y + 190.0f;
	}

	@Override
	public void draw(SpriteBatch batch) {
		batch.begin();
		KFNekko.resource.chunkFive.setColor(Color.WHITE);
		KFNekko.resource.chunkFive.draw(batch, PAUSED,
				KFNekko.camera.camera.position.x - halfWidth,
				KFNekko.camera.camera.position.y);
		KFNekko.resource.chunkFive.batch.end();
	}

	@Override
	public boolean onTouchDown(float x, float y) {
		if (resumeRect.contains(x, y)) {
			KFNekko.view = KFNekko.VIEW_GAME;
			KFNekko.audio.touch();
			return true;
		} else
			return false;
	}
	
	private void updateTitleColor() {
		boolean change = false;
		if (resumeColor.r > targetTitleColor.r) {
			if ((resumeColor.r -= COLOR_SPEED) < targetTitleColor.r)
				change = true;
		} else if (resumeColor.r < targetTitleColor.r) {
			if ((resumeColor.r += COLOR_SPEED) > targetTitleColor.r)
				change = true;
		}

		if (resumeColor.g > targetTitleColor.g) {
			if ((resumeColor.g -= COLOR_SPEED) < targetTitleColor.g)
				change = true;
		} else if (resumeColor.g < targetTitleColor.g) {
			if ((resumeColor.g += COLOR_SPEED) > targetTitleColor.g)
				change = true;
		}

		if (resumeColor.b > targetTitleColor.b) {
			if ((resumeColor.b -= COLOR_SPEED) < targetTitleColor.b)
				change = true;
		} else if (resumeColor.b < targetTitleColor.b) {
			if ((resumeColor.b += COLOR_SPEED) > targetTitleColor.b)
				change = true;
		}

		if (change)
			targetTitleColor = genColor();

	}

}
