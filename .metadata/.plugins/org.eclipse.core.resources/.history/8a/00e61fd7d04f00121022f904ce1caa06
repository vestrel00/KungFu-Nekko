package com.vestrel00.nekko;

import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion;
import com.badlogic.gdx.math.Rectangle;
import com.vestrel00.nekko.interf.Drawable;
import com.vestrel00.nekko.interf.Touchable;
import com.vestrel00.nekko.interf.Updatable;

public class OptionsManager implements Touchable, Drawable, Updatable {

	private AtlasRegion soundOn, soundOff, musicOn, musicOff;
	private Rectangle soundRect, musicRect;

	public OptionsManager() {
		soundOn = KFNekko.resource.atlas.findRegion("soundOn");
		soundOff = KFNekko.resource.atlas.findRegion("soundOff");
		musicOn = KFNekko.resource.atlas.findRegion("musicOn");
		musicOff = KFNekko.resource.atlas.findRegion("musicOff");
		soundRect = new Rectangle(0, 0, (float) soundOn.originalWidth,
				(float) soundOn.originalHeight);
		musicRect = new Rectangle(0, 0, (float) musicOn.originalWidth,
				(float) musicOn.originalHeight);
	}

	@Override
	public void update() {
		soundRect.x = KFNekko.camera.rect.x + 130.0f;
		musicRect.x = KFNekko.camera.rect.x + 276.0f;
		soundRect.y = KFNekko.camera.rect.y + 130.0f;
		musicRect.y = KFNekko.camera.rect.y + 139.0f;
	}

	@Override
	public void draw(SpriteBatch batch) {
		if (KFNekko.settings.soundOn)
			batch.draw(soundOn, soundRect.x, soundRect.y, soundRect.width,
					soundRect.height);
		else
			batch.draw(soundOff, soundRect.x, soundRect.y, soundRect.width,
					soundRect.height);

		if (KFNekko.settings.musicOn)
			batch.draw(musicOn, musicRect.x, musicRect.y, musicRect.width,
					musicRect.height);
		else
			batch.draw(musicOff, musicRect.x, musicRect.y, musicRect.width,
					musicRect.height);
	}

	@Override
	public boolean onTouchDown(float x, float y) {
		if (soundRect.contains(x, y)) {
			
			return true;
		} else if (musicRect.contains(x, y)) {
			
			return true;
		} else
			return false;
	}

}
