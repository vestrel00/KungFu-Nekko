package com.vestrel00.nekko.actors.components;

import com.badlogic.gdx.math.Rectangle;
import com.vestrel00.nekko.KFNekko;
import com.vestrel00.nekko.actors.Actor;
import com.vestrel00.nekko.actors.states.StatusState;
import com.vestrel00.nekko.actors.states.Visibility;
import com.vestrel00.nekko.interf.Updatable;

public class Location implements Updatable {

	public Actor actor;
	public Rectangle rect;
	public Speed speed;
	public float x, y, jumpHeight, jumpSpeed;
	public boolean onPlatform, onSlope;

	public Location(float x, float y, float maxXSpeed, float maxYSpeed,
			float jumpHeight, float jumpSpeed) {
		this.x = x;
		this.y = y;
		this.jumpHeight = jumpHeight;
		this.jumpSpeed = jumpSpeed;
		speed = new Speed(maxXSpeed, maxYSpeed);
		rect = new Rectangle();
		onPlatform = false;
		onSlope = false;
	}

	public void setActor(Actor actor) {
		this.actor = actor;
		rect.set(actor.location.x, actor.location.y,
				(float) actor.sprite.currentTexture.originalWidth,
				(float) actor.sprite.currentTexture.originalHeight);
	}

	@Override
	public void update() {
		if(actor.statusState == StatusState.ALIVE){
			actor.visibility = (KFNekko.camera.rect.overlaps(rect)) ? Visibility.VISIBLE : Visibility.NOT_VISIBLE;
		}
	}

}
