package com.vestrel00.nekko.actors.components;

public class Speed {

	public static final int DIRECTION_UP = 1;
	public static final int DIRECTION_DOWN = -1;
	public static final int DIRECTION_LEFT = -1;
	public static final int DIRECTION_RIGHT = 1;
	private static final float HORI_ACCEL = 3.0f;
	private static final float VERT_ACCEL = 4.0f;

	public int xDirection, yDirection;
	public float xSpeed, ySpeed, maxXSpeed, maxYSpeed;

	public Speed(float maxXSpeed, float maxYSpeed) {
		this.maxXSpeed = maxXSpeed;
		this.maxYSpeed = maxYSpeed;
		init();
	}

	public Speed() {
		init();
	}

	private void init() {
		xDirection = DIRECTION_RIGHT;
		yDirection = DIRECTION_DOWN;
		xSpeed = 0.0f;
		ySpeed = 0.0f;
	}

	public void decel() {
		decreaseHorizontalSpeed();
	}

	public void accelLeft() {
		if (xDirection == DIRECTION_RIGHT) {
			if (xSpeed > 0.0f)
				decreaseHorizontalSpeed();
			else
				xDirection = DIRECTION_LEFT;
		} else
			increaseHorizontalSpeed();
	}

	public void accelRight() {
		if (xDirection == DIRECTION_LEFT) {
			if (xSpeed > 0.0f)
				decreaseHorizontalSpeed();
			else
				xDirection = DIRECTION_RIGHT;
		} else
			increaseHorizontalSpeed();
	}

	public void accelDown() {
		if (yDirection == DIRECTION_UP) {
			if (ySpeed > 0.0f)
				decreaseVerticalSpeed();
			else
				yDirection = DIRECTION_DOWN;
		} else
			increaseVerticalSpeed();
	}

	public void accelUp() {
		if (yDirection == DIRECTION_DOWN) {
			if (ySpeed > 0.0f)
				decreaseVerticalSpeed();
			else
				yDirection = DIRECTION_UP;
		} else
			increaseVerticalSpeed();
	}

	public void increaseHorizontalSpeed() {
		if (xSpeed < maxXSpeed) {
			xSpeed += HORI_ACCEL;
			if (xSpeed > maxXSpeed)
				xSpeed = maxXSpeed;
		}
	}

	public void decreaseHorizontalSpeed() {
		if (xSpeed > 0.0f) {
			xSpeed -= HORI_ACCEL;
			if (xSpeed < 0.0f)
				xSpeed = 0.0f;
		}
	}

	public void increaseVerticalSpeed() {
		if (ySpeed < maxYSpeed) {
			ySpeed += VERT_ACCEL;
			if (ySpeed > maxYSpeed)
				ySpeed = maxYSpeed;
		}
	}

	public void decreaseVerticalSpeed() {
		if (ySpeed > 0.0f) {
			ySpeed -= VERT_ACCEL;
			if (ySpeed < 0.0f)
				ySpeed = 0.0f;
		}
	}

	public float getXVelocity() {
		return xSpeed * (float) xDirection;
	}

	public float getYVelocity() {
		return ySpeed * (float) yDirection;
	}

}
