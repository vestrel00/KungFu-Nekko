package com.vestrel00.nekko;

import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.utils.TimeUtils;
import com.vestrel00.nekko.extras.StringTyper;
import com.vestrel00.nekko.interf.Drawable;
import com.vestrel00.nekko.interf.Updatable;

public class Credits implements Updatable, Drawable {

	private final CharSequence[] authors = { "Developer\nVandolf Estrellado",
			"Dogchicken", "Buch", "PowStudios",
			"Gregoire Lourme & Iwan Gabovitch", "CGEffex", "Movingplaid",
			"NoiseCollector", "Soundscalpel.com", "Shaynecantly", "Thebondman",
			"The League of Moveable Type" };
	private final CharSequence[] links = { "@Indiedb.com/members/vestrel00",
			"@Opengameart.org/users/dogchicken", "@Opengameart.org/users/buch",
			"@PowStudios.com", "@Jamendo.com/en/artist/560/gregoire-lourme",
			"@Freesound.org/people/CGEffex/sounds",
			"@Freesound.org/people/movingplaid/sounds",
			"@Freesound.org/people/NoiseCollector/sounds",
			"@Freesound.org/people/soundscalpel.com/sounds",
			"@Freesound.org/people/shaynecantly/sounds",
			"@Freesound.org/people/thebondman/sounds",
			"@Theleagueofmoveabletype.com" };
	private final CharSequence[] works = {
			"Wrath of Magic\nGruff",
			"Flying Tongue Monster\nCute Monster\nSkull Monster\nSpring Demon\nDance Music",
			"Minimal sidescroller tileset\nDwarf Portrait\nPixel art user interface",
			"Smoke animation pack 1", "Commando Team (Action)",
			"Punches\n Fist Punch", "Concrete Steps", "Cat1",
			"Foley cable woosh air", "Miners Explosion",
			"Indiana jones style punch", "Chunkfive Font" };

	private Color color;
	private StringTyper authorTyper, linkTyper, workTyper;
	private int phase = 0, index = 0;
	private long phaseEndTime;

	public Credits() {
		color = new Color(Color.CLEAR);
		authorTyper = new StringTyper(authors[index], 300000000L);
		linkTyper = new StringTyper(links[index], 300000000L);
		workTyper = new StringTyper(works[index], 300000000L);
	}

	@Override
	public void draw(SpriteBatch batch) {
		// TODO Auto-generated method stub

	}

	@Override
	public void update() {
		switch (phase) {
		case 0:
			break;
		case 1:
			break;
		case 2:
			break;
		}
	}

	private boolean updateColor(float colorSpeed) {
		switch (phase) {
		case 0:
			color.r += colorSpeed;
			color.g += colorSpeed;
			color.b += colorSpeed;
			color.a += colorSpeed;
			if (color.a > 1.0f) {
				phaseEndTime = TimeUtils.nanoTime();
				phase = 1;
				color.r = 1.0f;
				color.g = 1.0f;
				color.b = 1.0f;
				color.a = 1.0f;
				return true;
			}
			break;
		case 1:
			if (TimeUtils.nanoTime() - phaseEndTime > 2000000000L) {
				phaseEndTime = TimeUtils.nanoTime();
				phase = 2;
				return true;
			}
			break;
		case 2:
			color.a -= 0.03f;
			if (color.a < 0.0f) {
				color.set(Color.CLEAR);
				return true;
			}
			break;
		}
		return false;
	}

}
